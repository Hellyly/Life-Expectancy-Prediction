j<-j+1
l <- sapply(data, is.numeric)
if(l[i]){
print(ggplot(data, mapping = aes_string(x = columns[j])) + geom_histogram(binwidth = 10) +ggtitle(columns[j]))
}
else{
print(ggplot(data, mapping = aes_string(x = columns[j], fill= columns[j])) + layer(geom = "bar",
stat = "count",
position = "identity") + ggtitle(columns[j]))
}
}
}
plotcols(mpg,columns)
nooc <- ncol(mpg)
columns <- names(mpg)[1:nooc]
j <- 0
plotcols <- function(data,a){
for(i in a){
j<-j+1
l <- sapply(data, is.numeric)
if(l[i]){
print(ggplot(data, mapping = aes_string(x = columns[j])) + geom_histogram(binwidth = 10) +ggtitle(columns[j]))
}
else{
print(ggplot(data, mapping = aes_string(x = columns[j], fill= columns[j])) + layer(geom = "bar",
stat = "count",
position = "identity") + ggtitle(columns[j]))
}
}
}
plotcols(mpg,columns)
nooc <- ncol(mpg)
columns <- names(mpg)[1:nooc]
j <- 0
plotcols <- function(data,a){
for(i in a){
j<-j+1
l <- sapply(data, is.numeric)
if(l[i]){
print(ggplot(data, mapping = aes_string(x = columns[j])) + geom_histogram(binwidth = 30) +ggtitle(columns[j]))
}
else{
print(ggplot(data, mapping = aes_string(x = columns[j], fill= columns[j])) + layer(geom = "bar",
stat = "count",
position = "identity") + ggtitle(columns[j]))
}
}
}
plotcols(mpg,columns)
nooc <- ncol(mpg)
columns <- names(mpg)[1:nooc]
j <- 0
plotcols <- function(data,a){
for(i in a){
j<-j+1
l <- sapply(data, is.numeric)
if(l[i]){
print(ggplot(data, mapping = aes_string(x = columns[j])) + geom_histogram(binwidth = 1) +ggtitle(columns[j]))
}
else{
print(ggplot(data, mapping = aes_string(x = columns[j], fill= columns[j])) + layer(geom = "bar",
stat = "count",
position = "identity") + ggtitle(columns[j]))
}
}
}
plotcols(mpg,columns)
nooc <- ncol(mpg)
columns <- names(mpg)[1:nooc]
j <- 0
plotcols <- function(data,a){
for(i in a){
j<-j+1
l <- sapply(data, is.numeric)
if(l[i]){
print(ggplot(data, mapping = aes_string(x = columns[j])) + geom_histogram(binwidth = 1, fill="white") +ggtitle(columns[j]))
}
else{
print(ggplot(data, mapping = aes_string(x = columns[j], fill= columns[j])) + layer(geom = "bar",
stat = "count",
position = "identity") + ggtitle(columns[j]))
}
}
}
plotcols(mpg,columns)
nooc <- ncol(mpg)
columns <- names(mpg)[1:nooc]
j <- 0
plotcols <- function(data,a){
for(i in a){
j<-j+1
l <- sapply(data, is.numeric)
if(l[i]){
print(ggplot(data, mapping = aes_string(x = columns[j])) + geom_histogram(binwidth = 1, color = "black",fill="white") +ggtitle(columns[j]))
}
else{
print(ggplot(data, mapping = aes_string(x = columns[j], fill= columns[j])) + layer(geom = "bar",
stat = "count",
position = "identity") + ggtitle(columns[j]))
}
}
}
plotcols(mpg,columns)
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff=60), tidy = TRUE)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
library(maps)
library(measurements)
a <- read_csv("NavajoWaterExport.csv")
df1 <- as_tibble(a)
df2 <- mutate(df1, `Amount of Radium228` = replace(`Amount of Radium228`,`Amount of Radium228`< 0, 0))%>% as.tibble()
df3 <- filter(df2, !(`US EPA Risk Rating` == "Unknown Risk"))
byepa <- df3 %>%
select(`Which EPA Section is This From?`,`Amount of Radium228`)%>%
group_by(`Which EPA Section is This From?`)%>%
ggplot(aes(x=`Which EPA Section is This From?`,y=`Amount of Radium228`))+
geom_count(aes(color = ..n..)) +
guides(color = 'legend')
byepa
byrisk <- df3 %>%
select(`US EPA Risk Rating`,`Amount of Radium228`)%>%
group_by(`US EPA Risk Rating`)%>%
ggplot(aes(x=`US EPA Risk Rating`,y=`Amount of Radium228`)) +
geom_count(aes(color = ..n..)) +
guides(color = 'legend')
byrisk
df1 <- as_tibble(a)
df2 <- mutate(df1, `Amount of Radium228` = replace(`Amount of Radium228`,`Amount of Radium228`< 0, 0))%>% as.tibble()
df3 <- filter(df2, !(`US EPA Risk Rating` == "Unknown Risk"))
byepa <- df3 %>%
select(`Which EPA Section is This From?`,`Amount of Radium228`)%>%
group_by(`Which EPA Section is This From?`)%>%
ggplot(aes(x=`Which EPA Section is This From?`,y=`Amount of Radium228`))+
geom_count(aes(color = ..n..)) +
guides(color = 'legend')
byepa
byrisk <- df3 %>%
select(`US EPA Risk Rating`,`Amount of Radium228`)%>%
group_by(`US EPA Risk Rating`)%>%
ggplot(aes(x=`US EPA Risk Rating`,y=`Amount of Radium228`)) +
geom_count(aes(color = ..n..)) +
guides(color = 'legend')
byrisk
four_corners <- map_data("state",
region=c("arizona", "new mexico",
"utah",
"colorado"))
map1 <-  ggplot(four_corners) +
geom_polygon(mapping=aes(x=long,y=lat,group=group),fill=NA, color="red") +
coord_map()
lo <- measurements::conv_unit(df3$Longitude, from = 'deg_dec_min', to = 'dec_deg')
la <- measurements::conv_unit(df3$Latitude, from = 'deg_dec_min', to = 'dec_deg')
lo <- as.numeric(lo)
la <- as.numeric(la)
foo <- tibble("Long" = lo, "Lat" = la, EPA = df3$`US EPA Risk Rating`, rad = df3$`Amount of Radium228`)
foo$Long <- foo$Long*(-1)
map2<- map1 +
geom_point(data = foo, aes(x = Long, y = Lat, shape = EPA, color = rad)) +
xlim(-114.8093,-102.0438) +
ylim(31.34652,42.00354) +
ggtitle("Four Corners EPA")
map2
# install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes 8
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
text <- readLines(file.choose())
filePath <- "/Users/abhijit/Desktop/Resumes/Abhijit\ editable.docx "
text <- readLines(filePath)
docs <- Corpus(VectorSource(text))
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
# docs <- tm_map(docs, stemDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
text[grep(pattern = "I have", text, ignore.case = T)]
library(tibble)
library(dplyr)
library(ggplot2)
library(readxl)
library(tibble)
library(dplyr)
library(ggplot2)
library(readxl)
a <- read_xlsx("worldbank.csv")
setwd("~/Desktop/DMP Project")
a <- read_xlsx("worldbank.xlxs")
a <- read_xlsx("worldbank.xlsx")
a
a <- as_tibble(read_xlsx("worldbank.xlsx"))
new_df <- filter(a, a$`Series Name` == 'Life expectancy at birth, total (years)')
colMeans(new_df)
?average
?avg
?mean
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff=60), tidy = TRUE, warning = FALSE)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
library(maps)
library(measurements)
a$gender <- "Non-Binary"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(2) Woman"] <- "Trans-Women"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(1) Man"] <- "Trans-Male"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(1) Man"] <- "Male"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(2) Woman"] <- "Female"
a$gender <- factor(a$gender)
summary(a$gender)
new_df <- filter(a, a$gender == "Non-Binary"|a$gender == "Trans-Male"|a$gender == "Trans-Women")
ggplot(new_df, aes(x = new_df$gender, fill = new_df$gender)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race"))
df_homeless <- subset(new_df, !(new_df$Q50 == "NA"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1, fill = df_homeless$Q50), stat="count") + geom_bar() + facet_wrap(~ df_homeless$gender) +xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless"))
a <- load("/Users/abhijit/Desktop/Semester2/DMP/hw4-test/ICPSR_31721/DS0001/31721-0001-Data.rda")
a <- as_tibble(da31721.0001)
a$gender <- "Non-Binary"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(2) Woman"] <- "Trans-Women"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(1) Man"] <- "Trans-Male"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(1) Man"] <- "Male"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(2) Woman"] <- "Female"
a$gender <- factor(a$gender)
summary(a$gender)
new_df <- filter(a, a$gender == "Non-Binary"|a$gender == "Trans-Male"|a$gender == "Trans-Women")
ggplot(new_df, aes(x = new_df$gender, fill = new_df$gender)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race"))
df_homeless <- subset(new_df, !(new_df$Q50 == "NA"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1, fill = df_homeless$Q50), stat="count") + geom_bar() + facet_wrap(~ df_homeless$gender) +xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless"))
a$gender <- "Non-Binary"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(2) Woman"] <- "Trans-Women"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(1) Man"] <- "Trans-Male"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(1) Man"] <- "Male"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(2) Woman"] <- "Female"
a$gender <- factor(a$gender)
summary(a$gender)
new_df <- filter(a, a$gender == "Non-Binary"|a$gender == "Trans-Male"|a$gender == "Trans-Women")
ggplot(new_df, aes(x = new_df$gender, fill = new_df$gender)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race"))
df_homeless <- subset(new_df, !(new_df$Q50 == "NA"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = df_homeless$Q50)) + facet_wrap(~ df_homeless$gender) +xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless"))
a$gender <- "Non-Binary"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(2) Woman"] <- "Trans-Women"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(1) Man"] <- "Trans-Male"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(1) Man"] <- "Male"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(2) Woman"] <- "Female"
a$gender <- factor(a$gender)
summary(a$gender)
new_df <- filter(a, a$gender == "Non-Binary"|a$gender == "Trans-Male"|a$gender == "Trans-Women")
ggplot(new_df, aes(x = new_df$gender, fill = new_df$gender)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race"))
df_homeless <- subset(new_df, !(new_df$Q50 == "NA"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..)) + facet_wrap(~ df_homeless$gender) +xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless"))
race_df <- gather(a,D9_1,D9_2,D9_3,D9_4,D9_5,D9_6,D9_7, key = "Race", value = "Selection" )
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff=60), tidy = TRUE, warning = FALSE)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
library(maps)
library(measurements)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
library(plyr)
library(tidyr)
library(formatR)
c <- read_csv("CRDC 2015-16 School Data.csv", na=c("-2", "-5", "-6", "-7", "-8", "-9"))
school_data <- as_tibble(c)
School = school_data$SCH_NAME
His_enr = abs(school_data$SCH_ENR_HI_M + school_data$SCH_ENR_HI_F)
Bl_enr = abs(school_data$SCH_ENR_BL_M + school_data$SCH_ENR_BL_F)
Am_enr = abs(school_data$SCH_ENR_AM_M + school_data$SCH_ENR_AM_F)
As_enr = abs(school_data$SCH_ENR_AS_M + school_data$SCH_ENR_AS_F)
Hp_enr = abs(school_data$SCH_ENR_HP_M + school_data$SCH_ENR_HP_F)
Wh_enr = abs(school_data$SCH_ENR_WH_M + school_data$SCH_ENR_WH_F)
#Tr_enr = abs(school_data$SCH_ENR_TR_M + school_data$SCH_ENR_TR_F)
Total = abs(school_data$TOT_ENR_F + school_data$TOT_ENR_M)
a <- tibble(School,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr,Total)
b <- as_tibble(a[,-(1)]%>%sapply('/', a$Total))
b <- mutate(b, School = School)
b <- gather(b,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr, key = "Race", value = "Prop" )
b<- filter(b, b$Prop <= 1)
ggplot(b, aes(x=Race,y = Prop, fill = Race)) + geom_boxplot()
School = school_data$SCH_NAME
His_enr = abs(school_data$SCH_MATHENR_CALC_HI_M + school_data$SCH_MATHENR_CALC_HI_F)
Bl_enr = abs(school_data$SCH_MATHENR_CALC_BL_M + school_data$SCH_MATHENR_CALC_BL_F)
Am_enr = abs(school_data$SCH_MATHENR_CALC_AM_M + school_data$SCH_MATHENR_CALC_AM_F)
As_enr = abs(school_data$SCH_MATHENR_CALC_AS_M + school_data$SCH_MATHENR_CALC_AS_F)
Hp_enr = abs(school_data$SCH_MATHENR_CALC_HP_M + school_data$SCH_MATHENR_CALC_HP_F)
Wh_enr = abs(school_data$SCH_MATHENR_CALC_WH_M + school_data$SCH_MATHENR_CALC_WH_F)
Total = abs(school_data$TOT_MATHENR_CALC_M + school_data$TOT_MATHENR_CALC_F)
a <- tibble(School,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr,Total)
b <- as.tibble(a[,-(1)]%>%sapply('/', a$Total))
b <- mutate(b, School = School)
b <- gather(b,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr, key = "Race", value = "Prop" )
b<- filter(b, b$Prop <= 1)
ggplot(b, aes(x=Race,y = Prop, fill = Race)) + geom_boxplot()
a <- load("/Users/abhijit/Desktop/Semester2/DMP/hw4-test/ICPSR_31721/DS0001/31721-0001-Data.rda")
a <- as_tibble(da31721.0001)
a$gender <- "Non-Binary"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(2) Woman"] <- "Trans-Women"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(1) Man"] <- "Trans-Male"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(1) Man"] <- "Male"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(2) Woman"] <- "Female"
a$gender <- factor(a$gender)
summary(a$gender)
new_df <- filter(a, a$gender == "Non-Binary"|a$gender == "Trans-Male"|a$gender == "Trans-Women")
ggplot(new_df, aes(x = new_df$gender, fill = new_df$gender)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race"))
df_homeless <- subset(new_df, !(new_df$Q50 == "NA"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..)) + facet_wrap(~ df_homeless$gender) +xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless"))
race_df <- gather(a,D9_1,D9_2,D9_3,D9_4,D9_5,D9_6,D9_7, key = "Race", value = "Selection" )
race_df <- filter(race_df, race_df$Selection == "(0) Not selected")
race_df$Race[race_df$Race == "D9_1"] <- "African-American"
race_df$Race[race_df$Race == "D9_2"] <- "White(Caucasian)"
race_df$Race[race_df$Race == "D9_3"] <- "Hispanic-Latino"
race_df$Race[race_df$Race == "D9_4"] <- "Native American"
race_df$Race[race_df$Race == "D9_5"] <- "Asian/Pacific Islander"
race_df$Race[race_df$Race == "D9_6"] <- "Carribian"
race_df$Race[race_df$Race == "D9_7"] <- "Other"
race_df<- subset(race_df, !(race_df$Race == "Other"))
ggplot(race_df, aes(x = race_df$Race, fill = race_df$Race)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race"))
#df_homeless <- filter(race_df, race_df$Q50 == "(1) Yes")
df_homeless<- subset(race_df, !(race_df$Q50 == "NA"))
df_homeless <- subset(df_homeless, !(df_homeless$Race == "Other"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..))  + facet_wrap(~df_homeless$Race) + xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119, fill = family_support$Q119)) + geom_bar() + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))+ theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
race_df <- gather(a,D9_1,D9_2,D9_3,D9_4,D9_5,D9_6,D9_7, key = "Race", value = "Selection" )
race_df <- filter(race_df, race_df$Selection == "(0) Not selected")
race_df$Race[race_df$Race == "D9_1"] <- "African-American"
race_df$Race[race_df$Race == "D9_2"] <- "White(Caucasian)"
race_df$Race[race_df$Race == "D9_3"] <- "Hispanic-Latino"
race_df$Race[race_df$Race == "D9_4"] <- "Native American"
race_df$Race[race_df$Race == "D9_5"] <- "Asian/Pacific Islander"
race_df$Race[race_df$Race == "D9_6"] <- "Carribian"
race_df$Race[race_df$Race == "D9_7"] <- "Other"
race_df<- subset(race_df, !(race_df$Race == "Other"))
ggplot(race_df, aes(x = race_df$Race, fill = race_df$Race)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race")) +   theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
#df_homeless <- filter(race_df, race_df$Q50 == "(1) Yes")
df_homeless<- subset(race_df, !(race_df$Q50 == "NA"))
df_homeless <- subset(df_homeless, !(df_homeless$Race == "Other"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..))  + facet_wrap(~df_homeless$Race) + xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless"))
a$gender <- "Non-Binary"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(2) Woman"] <- "Trans-Women"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(1) Man"] <- "Trans-Male"
a$gender[a$Q5 == "(1) Male" & a$Q6 == "(1) Man"] <- "Male"
a$gender[a$Q5 == "(2) Female" & a$Q6 == "(2) Woman"] <- "Female"
a$gender <- factor(a$gender)
summary(a$gender)
new_df <- filter(a, a$gender == "Non-Binary"|a$gender == "Trans-Male"|a$gender == "Trans-Women")
ggplot(new_df, aes(x = new_df$gender, fill = new_df$gender)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race"))
df_homeless <- subset(new_df, !(new_df$Q50 == "NA"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..)) + facet_wrap(~ df_homeless$gender) +xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless")) + theme(legend.position="none")
race_df <- gather(a,D9_1,D9_2,D9_3,D9_4,D9_5,D9_6,D9_7, key = "Race", value = "Selection" )
race_df <- filter(race_df, race_df$Selection == "(0) Not selected")
race_df$Race[race_df$Race == "D9_1"] <- "African-American"
race_df$Race[race_df$Race == "D9_2"] <- "White(Caucasian)"
race_df$Race[race_df$Race == "D9_3"] <- "Hispanic-Latino"
race_df$Race[race_df$Race == "D9_4"] <- "Native American"
race_df$Race[race_df$Race == "D9_5"] <- "Asian/Pacific Islander"
race_df$Race[race_df$Race == "D9_6"] <- "Carribian"
race_df$Race[race_df$Race == "D9_7"] <- "Other"
race_df<- subset(race_df, !(race_df$Race == "Other"))
ggplot(race_df, aes(x = race_df$Race, fill = race_df$Race)) + geom_bar() + xlab("Race")+ guides(fill=guide_legend(title ="Race")) +   theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
df_homeless<- subset(race_df, !(race_df$Q50 == "NA"))
df_homeless <- subset(df_homeless, !(df_homeless$Race == "Other"))
ggplot(df_homeless, aes(x = df_homeless$Q50, y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..))  + facet_wrap(~df_homeless$Race) + xlab("Been Homeless")+ guides(fill=guide_legend(title ="Been Homeless")) + theme(legend.position="none")
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..)) + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))+ theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..)) + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = family_support$Q119)) + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = Q119)) + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = class)) + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar(aes(fill)) + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar(aes(fill = ..prop..)) + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar() + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support"))
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar() + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support")) + xlab("Level of Family Support")
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar() + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support")) + xlab("Level of Family Support")
new_df3 <- filter(a, a$Q133 ==  "(1) Yes" | a$Q133 ==  "(2) No" )
test <- as_tibble(summary(new_df3$Q133))
proportion <- test$value[1]/(test$value[1]+test$value[2])
paste0("The percentage of people who have tried to kill themselved in Virginia are ",round(proportion*100,3), "%")
family_support <- subset(new_df3, !is.na(Q119))
family_support <- subset(family_support, !(family_support$Q119 == "(5) Not applicable to me"))
ggplot(family_support, aes(x = family_support$Q119,  y=..prop..,group = 1), stat="count") + geom_bar() + labs(title="Level of Family support", size = 15)+guides(fill=guide_legend(title ="Level of Family support")) + xlab("Level of Family Support")
School = school_data$SCH_NAME
His_enr = abs(school_data$SCH_MATHENR_CALC_HI_M + school_data$SCH_MATHENR_CALC_HI_F)
Bl_enr = abs(school_data$SCH_MATHENR_CALC_BL_M + school_data$SCH_MATHENR_CALC_BL_F)
Am_enr = abs(school_data$SCH_MATHENR_CALC_AM_M + school_data$SCH_MATHENR_CALC_AM_F)
As_enr = abs(school_data$SCH_MATHENR_CALC_AS_M + school_data$SCH_MATHENR_CALC_AS_F)
Hp_enr = abs(school_data$SCH_MATHENR_CALC_HP_M + school_data$SCH_MATHENR_CALC_HP_F)
Wh_enr = abs(school_data$SCH_MATHENR_CALC_WH_M + school_data$SCH_MATHENR_CALC_WH_F)
Total = abs(school_data$TOT_MATHENR_CALC_M + school_data$TOT_MATHENR_CALC_F)
a <- tibble(School,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr,Total)
b <- as.tibble(a[,-(1)]%>%sapply('/', a$Total))
b <- mutate(b, School = School)
b <- gather(b,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr, key = "Race", value = "Prop" )
b<- filter(b, b$Prop <= 1)
ggplot(b, aes(x=Race,y = ..prop.., fill = Race)) + geom_boxplot()
School = school_data$SCH_NAME
His_enr = abs(school_data$SCH_MATHENR_CALC_HI_M + school_data$SCH_MATHENR_CALC_HI_F)
Bl_enr = abs(school_data$SCH_MATHENR_CALC_BL_M + school_data$SCH_MATHENR_CALC_BL_F)
Am_enr = abs(school_data$SCH_MATHENR_CALC_AM_M + school_data$SCH_MATHENR_CALC_AM_F)
As_enr = abs(school_data$SCH_MATHENR_CALC_AS_M + school_data$SCH_MATHENR_CALC_AS_F)
Hp_enr = abs(school_data$SCH_MATHENR_CALC_HP_M + school_data$SCH_MATHENR_CALC_HP_F)
Wh_enr = abs(school_data$SCH_MATHENR_CALC_WH_M + school_data$SCH_MATHENR_CALC_WH_F)
Total = abs(school_data$TOT_MATHENR_CALC_M + school_data$TOT_MATHENR_CALC_F)
a <- tibble(School,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr,Total)
b <- as.tibble(a[,-(1)]%>%sapply('/', a$Total))
b <- mutate(b, School = School)
b <- gather(b,His_enr, Bl_enr,Am_enr,As_enr,Hp_enr,Wh_enr, key = "Race", value = "Prop" )
b<- filter(b, b$Prop <= 1)
ggplot(b, aes(x=Race,y = Prop, fill = Race)) + geom_boxplot()
